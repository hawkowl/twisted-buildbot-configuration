#! /usr/bin/python

# This configuration file is described in $BUILDBOT/docs/config.xhtml

# This is used (with online=True) to run the Twisted Buildbot at
# http://www.twistedmatrix.com/buildbot/ . Passwords and other secret
# information are loaded from a neighboring file called 'private.py'.

import sys
sys.path.append('/srv/bb-master/BuildBot/support-master')

import os.path

from buildbot.changes.pb import PBChangeSource
from buildbot.scheduler import Scheduler, Try_Userpass
from buildbot.steps.source import SVN
from buildbot.process.factory import s
from buildbot.status import html, words, client, mail
from buildbot.locks import SlaveLock

import private # holds passwords
reload(private) # make it possible to change the contents without a restart

# Make sure code changes in the steps get noticed.
import twisted_steps
reload(twisted_steps)

import twisted_factories
reload(twisted_factories)
from twisted_factories import (
    TwistedDocumentationBuildFactory, FullTwistedBuildFactory,
    GoodTwistedBuildFactory, TwistedReactorsBuildFactory, Win32RemovePYCs,
    QuickTwistedBuildFactory)

import twisted_status
reload(twisted_status)
from twisted_status import TenBoxesPerBuilder

BuildmasterConfig = c = {}

# I set really=False when testing this configuration at home
really = True
usePBChangeSource = True


c['bots'] = []
for bot in private.bot_passwords.keys():
    c['bots'].append((bot, private.bot_passwords[bot]))

c['sources'] = []

# the Twisted buildbot currently uses the contrib/svn_buildbot.py script.
# This makes a TCP connection to the ChangeMaster service to push Changes
# into the build master. The script is invoked by
# /svn/Twisted/hooks/post-commit, so it will only be run for things inside
# the Twisted repository. However, the standard SVN practice is to put the
# actual trunk in a subdirectory named "trunk/" (to leave room for
# "branches/" and "tags/"). We want to only pay attention to the trunk, so
# we use "trunk" as a prefix for the ChangeSource. This also strips off that
# prefix, so that the Builders all see sensible pathnames (which means they
# can do things like ignore the sandbox properly).

source = PBChangeSource(prefix="trunk/")
c['sources'].append(source)


## configure the builders

if 0:
    # always build on trunk
    svnurl = "svn://svn.twistedmatrix.com/svn/Twisted/trunk"
    source_update = s(SVN, svnurl=svnurl, mode="update")
    source_copy = s(SVN, svnurl=svnurl, mode="copy")
    source_export = s(SVN, svnurl=svnurl, mode="export")
else:
    # for build-on-branch, we use these instead
    baseURL = "svn://svn.twistedmatrix.com/svn/Twisted/"
    defaultBranch = "trunk"
    source_update = s(SVN, baseURL=baseURL, defaultBranch=defaultBranch,
                      mode="update")
    source_copy = s(SVN, baseURL=baseURL, defaultBranch=defaultBranch,
                    mode="copy")
    source_export = s(SVN, baseURL=baseURL, defaultBranch=defaultBranch,
                      mode="export")


builders = []



b24compile_opts = [
    "-Wignore::PendingDeprecationWarning:distutils.command.build_py",
    "-Wignore::PendingDeprecationWarning:distutils.command.build_ext",
    ]


b25compile_opts = b24compile_opts # FIXME

twoCPULock = SlaveLock('cpu', maxCount=2)

botCube = {
    'slavenames': ['bot-cube'],
    'locks': [twoCPULock]}

b1 = botCube.copy()
b1.update({
    'name': "quick",
    'builddir': "quick",
    'factory': QuickTwistedBuildFactory(
        source_update,
        python=["python2.3", "python2.4", "python2.5"],
        uncleanWarnings=False),
    'category': 'supported'})
builders.append(b1)

docBuilder = botCube.copy()
docBuilder.update({
    'name': 'documentation',
    'builddir': 'documentation',
    'factory': TwistedDocumentationBuildFactory(source_copy),
    'category': 'supported'})
builders.append(docBuilder)


b23compile_opts = [
    "-Wignore::PendingDeprecationWarning:distutils.command.build_py",
    "-Wignore::PendingDeprecationWarning:distutils.command.build_ext",
    ]
b23 = botCube.copy()
b23.update({
    'name': "debian-py2.3-select",
    'builddir': "full2.3",
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.3", "-Wall"],
                                       # use -Werror soon
                                       compileOpts=b23compile_opts,
                                       runTestsRandomly=1,
                                       uncleanWarnings=False),
    'category': 'supported'})
builders.append(b23)

b24 = botCube.copy()
b24.update({
    'name': 'debian-py2.4-select',
    'builddir': 'full2.4',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.4", "-Wall"],
                                       # use -Werror soon
                                       compileOpts=b24compile_opts,
                                       runTestsRandomly=1,
                                       uncleanWarnings=False),
    'category': 'supported'})

# Prefer bot-exarkun, if it is online, but let bot-cube do the build
# otherwise (copy, don't mutate - this is shared state!).
b24['slavenames'] = ['bot-exarkun'] + b24['slavenames']
builders.append(b24)

builders.append({
    'name': 'debian64-py2.4-select',
    'slavenames': ['bot-idnar-debian64'],
    'builddir': 'full2.4-debian64',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.4", "-Wall"],
                                       compileOpts=b24compile_opts,
                                       uncleanWarnings=False),
    'category': 'supported'})


builders.append({
    'name': 'debian-py2.5-select',
    'slavenames': ['bot-idnar-debian'],
    'builddir': 'full2.5-debian',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.5", "-Wall"],
                                       compileOpts=b24compile_opts,
                                       uncleanWarnings=False),
    'category': 'supported'})


builders.append({
    'name': 'suse-py2.5-select',
    'slavenames': ['bot-scmikes-2.5'],
    'builddir': 'bot-scmikes-2.5',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.5", "-Wall"],
                                       compileOpts=b24compile_opts,
                                       uncleanWarnings=False),
    'category': 'supported'})


reactors = ['poll', 'epoll', 'gtk', 'gtk2']
b4 = botCube.copy()
b4.update({
    'name': "debian-py2.4-reactors",
    'builddir': "reactors",
    'factory': TwistedReactorsBuildFactory(source_copy,
                                           python="python2.4",
                                           reactors=reactors,
                                           uncleanWarnings=True),
    'category': 'supported'})
builders.append(b4)

botOSX = {
    'slavename': 'bot-exarkun-osx',
    'locks': [twoCPULock]}

bosx24 = botOSX.copy()
bosx24.update({
    'name': 'osx-py2.4-select',
    'builddir': 'full2.4-exarkun-osx',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.4", "-Wall"],
                                       compileOpts=b24compile_opts,
                                       runTestsRandomly=1,
                                       uncleanWarnings=False),
    'category': 'supported'})
builders.append(bosx24)

bosx25 = botOSX.copy()
bosx25.update({
    'name': 'osx-py2.5-select',
    'builddir': 'full2.5-exarkun-osx',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.5", "-Wall"],
                                       compileOpts=b24compile_opts,
                                       runTestsRandomly=1,
                                       uncleanWarnings=False),
    'category': 'supported'})
builders.append(bosx25)

forcegc = botOSX.copy()
forcegc.update({
    'name': 'osx-py2.4-select-gc',
    'builddir': 'full2.4-force-gc-exarkun-osx',
    'factory': GoodTwistedBuildFactory(source_copy,
                                       python="python2.4",
                                       uncleanWarnings=False),
    'category': 'supported'})
builders.append(forcegc)


# debuild is offline while we figure out how to build 2.0 .debs from SVN
# b3 = {'name': "debuild",
#       'slavename': "bot2",
#       'builddir': "debuild",
#       'factory': TwistedDebsBuildFactory(source_export,
#                                          python="python2.4"),
#       }
# builders.append(b3)

builders.append({
          'name': "winxp32-py2.4-select",
          'slavename': "bot-scmikes-win32",
          'builddir': "WXP32-full2.4-scmikes-select",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="c:\\python24\python.exe",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["select"],
                                                 uncleanWarnings=True),
          'category': 'supported',
          'delay': 0})


builders.append({
          'name': "winxp32-py2.5-select",
          'slavename': "bot-scmikes-win32",
          'builddir': "WXP32-full2.5-scmikes-select",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="c:\\python25\\python.exe",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["select"],
                                                 uncleanWarnings=True),
          'category': 'supported',
          'delay': 60})


builders.append({
          'name': "vista-py2.5-select",
          'slavename': "bot-scmikes-win32-2.5",
          'builddir': "Vista-full2.5-scmikes-select",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="python",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["select"],
                                                 uncleanWarnings=False),
          'category': 'unsupported',
          'delay': 0})


builders.append({
    'name': 'fedora64-py2.4-reactors',
    'slavenames': ['bot-clocktime'],
    'builddir': 'fedora64-py2.4-reactors',
    'factory': TwistedReactorsBuildFactory(source_copy,
                                           python="python",
                                           reactors=["poll", "epoll", "glib2"],
                                           uncleanWarnings=True),
    'category': 'supported'})


builders.append({
    'name': 'fedora32-py2.5-reactors',
    'slavenames': ['bot-thread'],
    'builddir': 'fedora32-py2.5-reactors',
    'factory': TwistedReactorsBuildFactory(source_copy,
                                           python="python",
                                           reactors=["poll", "epoll", "glib2"],
                                           uncleanWarnings=True),
    'category': 'supported'})


builders.append({
          'name': "win32-py2.4-er",
          'slavename': "bot-win32-win32er",
          'builddir': "W32-full2.4-win32er",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="python",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["win32"],
                                                 uncleanWarnings=False),
          'category': 'unsupported'})


builders.append({
          'name': "vista-py2.5-iocp",
          'slavename': "bot-scmikes-win32-2.5",
          'builddir': "Vista-full2.5-scmikes-iocp",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="python",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["iocp"],
                                                 uncleanWarnings=False),
          'category': 'unsupported',
          'delay': 60})


builders.append({
          'name': "win32-py2.4-iocp",
          'slavename': "bot-win32-iocp",
          'builddir': "W32-full2.4-iocp",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="python",
                                                 compileOpts2=[],
                                                 reactors=["iocp"],
                                                 uncleanWarnings=False),
          'category': 'administrative-prohibition'})


builders.append({
          'name': "freebsd-py2.4-select-kq",
          'slavenames': ["bot-ghost", "bot-landonf"],
          'builddir': "freebsd-full2.4",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 python="python2.4",
                                                 reactors=["select", "kqueue"],
                                                 uncleanWarnings=False),
          'category': 'unsupported'})


#bpypyc = {'name': 'osx-pypyc-select',
#          'slavename': 'bot-jerub-pypy',
#          'builddir': 'pypy-c',
#          'factory': TwistedReactorsBuildFactory(source_copy,
#						 python="pypy-c",
#						 reactors=["default"])}
#builders.append(bpypyc)

c['builders'] = builders

# now set up the schedulers. We do this after setting up c['builders'] so we
# can auto-generate a list of all of them.
all_builders = [b['name'] for b in c['builders']]
all_builders.sort()
all_builders.remove("quick")

## configure the schedulers
s_quick = Scheduler(name="quick", branch=None, treeStableTimer=5,
                    builderNames=["quick"])
s_try = Try_Userpass("try", all_builders, port=9989,
                     userpass=private.try_users)

s_all = []
builderDelays = {}
for builder in c['builders']:
    builderDelays[builder['name']] = builder.pop('delay', 0)
for builderName in all_builders:
    s_all.append(Scheduler(name="all-" + builderName,
                           branch=None, builderNames=[builderName],
                           treeStableTimer=builderDelays[builderName] + 60))
c['schedulers'] = [s_quick, s_try] + s_all



# configure other status things

c['slavePortnum'] = 9987
c['status'] = []
if really:
    p = os.path.expanduser("~/.twistd-web-pb")
    c['status'].append(html.Waterfall(distrib_port=p, categories=['supported', 'unsupported']))
    c['status'].append(html.Waterfall(distrib_port=p + '-supported', categories=['supported']))
    c['status'].append(words.IRC(host="irc.freenode.net",
                                 nick='buildbot',
                                 channels=["twisted"]))
else:
    c['status'].append(html.Waterfall(http_port=9988))

status = html.WebStatus(
    distrib_port=os.path.expanduser('~/webstatus.twistd-web-pb'),
    allowForce=True)
status.putChild("ten_boxes_per_builder", TenBoxesPerBuilder())
c['status'].append(status)
del status

c['debugPassword'] = private.debugPassword
#c['interlocks'] = [("do-deb", ["full-2.2"], ["debuild"])]
if hasattr(private, "manhole"):
    from buildbot import manhole
    c['manhole'] = manhole.PasswordManhole(*private.manhole)
c['status'].append(client.PBListener(9936))
m = mail.MailNotifier(fromaddr="buildbot@twistedmatrix.com",
                      builders=["quick", "debian-py2.3-select"],
                      sendToInterestedUsers=True,
		      extraRecipients=["warner@lothar.com"],
		      mode="problem",
		      )
c['status'].append(m)
c['projectName'] = "Twisted"
c['projectURL'] = "http://twistedmatrix.com/"
c['buildbotURL'] = "http://buildbot.twistedmatrix.com/"
