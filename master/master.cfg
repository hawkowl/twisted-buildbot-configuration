#! /usr/bin/python

# This configuration file is described in $BUILDBOT/docs/config.xhtml

# This is used to run the Twisted Buildbot at
# <http://buildbot.twistedmatrix.com/>. Passwords and other secret
# information are loaded from a neighboring file called 'private.py'.

# Enable TCP keepalives.  The build master is terrible at noticing
# disconnected slaves.  Also it's terrible at letting me enable tcp
# keepalives.
from twisted.spread.pb import PBServerFactory
_parent = PBServerFactory.protocol
class KeepaliveBroker(_parent):
    def makeConnection(self, transport):
        transport.setTcpKeepAlive(True)
        return _parent.makeConnection(self, transport)
PBServerFactory.protocol = KeepaliveBroker

# We now return to your regularly scheduled program.
import sys
sys.path.append('/srv/bb-master/BuildBot/support-master')

import os.path

from buildbot.changes.pb import PBChangeSource
from buildbot.scheduler import Try_Userpass
from buildbot.steps.source import SVN
from buildbot.process.factory import s
from buildbot.status import html, words, client, mail
from buildbot.locks import SlaveLock
from buildbot.buildslave import BuildSlave

import private # holds passwords
reload(private) # make it possible to change the contents without a restart

from twisted_factories import (
    TwistedDocumentationBuildFactory, FullTwistedBuildFactory,
    PyFlakesBuildFactory, GoodTwistedBuildFactory,
    TwistedReactorsBuildFactory, Win32RemovePYCs,
    LinuxPyOpenSSLBuildFactory, DebianPyOpenSSLBuildFactory,
    OSXPyOpenSSLBuildFactory, Win32PyOpenSSLBuildFactory,
    TwistedEasyInstallFactory, TwistedPyPyBuildFactory,
    PyPyTranslationFactory, TwistedIronPythonBuildFactory,
    TwistedScheduler, TwistedBdistMsiFactory,
    PyOpenSSLGCoverageFactory, TwistedGCoverageFactory,
    TwistedCoveragePyFactory)

from twisted_status import TenBoxesPerBuilder

from buildbot.status.web.waterfall import WaterfallStatusResource

BuildmasterConfig = c = {}

# I set really=False when testing this configuration at home
really = True
usePBChangeSource = True

# Maximum number of builds to execute on a slave at a time.  Slaves
# not listed here have no limit.
slave_max_builds = {
    'bot-thijs': 1,
    'bot-arita-1': 1,
    'bot-arita-2': 1, 
    'bot-arita-3': 1,
   }


c['slaves'] = []
alwaysNotify = 'exarkun@twistedmatrix.com'
for bot in private.bot_info.keys():
    password, notifyOnMissing = private.bot_info[bot]
    if alwaysNotify not in notifyOnMissing:
        notifyOnMissing.append(alwaysNotify)
    c['slaves'].append(BuildSlave(
            bot, password, slave_max_builds.get(bot, None),
            notifyOnMissing, 2400))


c['change_source'] = []

# the Twisted buildbot currently uses the contrib/svn_buildbot.py script.
# This makes a TCP connection to the ChangeMaster service to push Changes
# into the build master. The script is invoked by
# /svn/Twisted/hooks/post-commit, so it will only be run for things inside
# the Twisted repository. However, the standard SVN practice is to put the
# actual trunk in a subdirectory named "trunk/" (to leave room for
# "branches/" and "tags/"). We want to only pay attention to the trunk, so
# we use "trunk" as a prefix for the ChangeSource. This also strips off that
# prefix, so that the Builders all see sensible pathnames (which means they
# can do things like ignore the sandbox properly).

source = PBChangeSource(prefix="trunk/")
c['change_source'].append(source)


## configure the builders

if 0:
    # always build on trunk
    svnurl = "svn://svn.twistedmatrix.com/svn/Twisted/trunk"
    source_update = s(SVN, svnurl=svnurl, mode="update")
    source_copy = s(SVN, svnurl=svnurl, mode="copy")
    source_export = s(SVN, svnurl=svnurl, mode="export")
else:
    # for build-on-branch, we use these instead
    baseURL = "svn://svn.twistedmatrix.com/svn/Twisted/"
    defaultBranch = "trunk"
    source_update = s(SVN, baseURL=baseURL, defaultBranch=defaultBranch,
                      mode="update")
    source_copy = s(SVN, baseURL=baseURL, defaultBranch=defaultBranch,
                    mode="copy")
    source_export = s(SVN, baseURL=baseURL, defaultBranch=defaultBranch,
                      mode="export")


builders = []



b23compile_opts = [
    "-Wignore::PendingDeprecationWarning:distutils.command.build_py",
    "-Wignore::PendingDeprecationWarning:distutils.command.build_ext",
    ]
b24compile_opts = [
    "-W", "ignore::PendingDeprecationWarning:distutils.command.build_py",
    "-W", "ignore::PendingDeprecationWarning:distutils.command.build_ext",
    ]

b25compile_opts = b24compile_opts # FIXME

oneCPULock = SlaveLock('cpu-1', maxCount=1)
twoCPULock = SlaveLock('cpu-2', maxCount=2)

botCube = {
    'slavenames': ['bot-cube'],
    'locks': [oneCPULock]}

b1 = botCube.copy()

docBuilder = botCube.copy()
docBuilder.update({
    'name': 'documentation',
    'builddir': 'documentation',
    'factory': TwistedDocumentationBuildFactory(source_copy),
    'category': 'supported'})
builders.append(docBuilder)

builders.append({
        'name': 'pyflakes',
        'slavenames': ['bot-bigdog24'],
        'builddir': 'pyflakes',
        'factory': PyFlakesBuildFactory(source_update),
        'category': 'unsupported'})

builders.append({
        'name': 'twisted-gcoverage',
        'builddir': 'twisted-gcoverage',
        'slavenames': ['bot-therve-1'],
        'factory': TwistedGCoverageFactory(python=["python"], source=source_copy),
        'category': 'unsupported'})

builders.append({
        'name': 'twisted-coverage.py',
        'builddir': 'twisted-coverage.py',
        'slavenames': ['bot-therve-1'],
        'factory': TwistedCoveragePyFactory(python=["python"], source=source_copy),
        'category': 'unsupported'})

builders.append({
    'name': 'ubuntu-py2.4-select',
    'builddir': 'ubuntu-py2.4-select',
    'slavenames': ['bot-bigdogvm1'],
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.4", "-Wall"],
                                       # use -Werror soon
                                       compileOpts=b24compile_opts,
                                       runTestsRandomly=1,
                                       uncleanWarnings=False),
    'category': 'supported'})

builders.append({
    'name': 'debian64-py2.4-select',
    'slavenames': ['bot-idnar-debian64'],
    'builddir': 'full2.4-debian64',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.4", "-Wall"],
                                       compileOpts=b24compile_opts,
                                       uncleanWarnings=False),
    'category': 'supported'})


builders.append({
    'name': 'debian-easy-py2.5-epoll',
    'slavenames': ['bot-idnar-debian'],
    'builddir': 'easy2.5debian',
    'factory': TwistedEasyInstallFactory(source_export,
                                         python=["python2.5", "-Wall"],
                                         uncleanWarnings=False,
                                         easy_install="easy_install-2.5"),
    'category': 'supported'})


b4 = {
    'slavenames': ['bot-arita-4'],
    'name': "ubuntu-py2.6-glib2",
    'builddir': "ubuntu-py2.6-glib2",
    'factory': TwistedReactorsBuildFactory(source_copy,
                                           python="python2.6",
                                           reactors=["glib2"],
                                           uncleanWarnings=True),
    'category': 'supported'}
builders.append(b4)

jython = {
    'slavenames': ['bot-thijs'],
    'name': 'ubuntu64-jython2.5-select',
    'builddir': 'jython2.5-thijs-ubuntu',
    'factory': FullTwistedBuildFactory(source_copy,
                                       trialTests=["twisted.test"], # It uses too much memory to run more right now.
                                       python=["jython", "-J-Xmx2048m", "-W", "all"],
                                       compileOpts=b25compile_opts),
    'category': 'unsupported',
    'unschedule': True}
builders.append(jython)
del jython

python26 = {
    'slavenames': ['bot-thijs', 'bot-arita-1'],
    'name': 'ubuntu64-py2.6-select',
    'builddir': 'ubuntu64-python2.6-select',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.6", "-Wall"]),
    'category': 'supported'}
builders.append(python26)
del python26


python27 = {
    'slavenames': ['bot-thijs'],
    'name': 'ubuntu64-py2.7-select',
    'builddir': 'ubuntu64-python2.7-select',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.7", "-Wall"]),
    'category': 'unsupported',
    'unschedule': True}
builders.append(python27)
del python27


python26W3 = {
    'slavenames': ['bot-thijs', 'bot-arita-1'],
    'name': 'python-3k-warnings',
    'builddir': 'python-3k-warnings',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python2.6", "-3"]),
    'category': 'unsupported',
    'unschedule': True}
builders.append(python26W3)
del python26W3


python30 = {
    'slavenames': ['bot-thijs'],
    'name': 'ubuntu64-py3.0-select',
    'builddir': 'ubuntu64-py3.0-select',
    'factory': FullTwistedBuildFactory(source_copy,
                                       python=["python3.0"],
                                       uncleanWarnings=False),
    'category': 'unsupported',
    'unschedule': True}
builders.append(python30)
del python30


builders.append({
    'name': 'py2.5-select-gc',
    'slavenames': ['bot-bigdog2'],
    'builddir': 'py2.5-select-gc',
    'factory': GoodTwistedBuildFactory(source_copy,
                                       python="python2.5",
                                       uncleanWarnings=False,
                                       forceGarbageCollection=True),
    'category': 'supported'})


# This builder simulates an environment which is missing some
# extension modules Twisted uses but which are not supposed to cause
# test suite failures if they are missing.
builders.append({
    'name': 'py2.5-without-modules',
    'slavenames': ['bot-bigdog2'],
    'builddir': 'py2.5-without-modules',
    'factory': GoodTwistedBuildFactory(
            source_copy, python="python2.5", uncleanWarnings=False,
            extraTrialArguments={
                'trialArgs': [
                    '--without-module', 'OpenSSL',
                    '--without-module', 'Crypto',
                    ]}),
    'category': 'supported'})



# When I try to combine these two slaves into one thing, buildbot
# freaks the fuck out.
winxp2 = {
    'slavenames': ['bot-scmikes-winxp32'],
    'locks': [oneCPULock]}

winxp3 = {
    'slavenames': ['bot-darkhorse'],
    'locks': [oneCPULock]}

winxp4 = {
    'slavenames': ['bot-scmikes-winxp32-2'],
    'locks': [oneCPULock]}

winxp32py24select = winxp3.copy()
winxp32py24select.update({
          'name': "winxp32-py2.4-select",
          'builddir': "WXP32-full2.4-scmikes-select",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="c:\\python24\python.exe",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["select"],
                                                 uncleanWarnings=True),
          'category': 'supported'})
builders.append(winxp32py24select)


winxp32py25select = winxp2.copy()
winxp32py25select.update({
          'name': "winxp32-py2.5-select",
          'builddir': "WXP32-full2.5-scmikes-select",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="c:\\python25\\python.exe",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["select"],
                                                 uncleanWarnings=True),
          'category': 'supported'})
builders.append(winxp32py25select)


winxp32py26select = winxp4.copy()
winxp32py26select.update({
          'name': "winxp32-py2.6-select",
          'builddir': "winxp32-py2.6-select",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="c:\\python26\\python.exe",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["select"],
                                                 uncleanWarnings=True),
          'category': 'supported'})
builders.append(winxp32py26select)


winxp32py25gtk2 = winxp4.copy()
winxp32py25gtk2.update({
    'name': 'winxp32-py2.5-gtk2',
    'builddir': 'winxp32-py2.5-gtk2',
    'factory': TwistedReactorsBuildFactory(source_copy,
                                           RemovePYCs=Win32RemovePYCs,
                                           python="c:\\python25\\python.exe",
                                           compileOpts2=["-c","mingw32"],
                                           reactors=["gtk2"],
                                           uncleanWarnings=True),
    'category': 'unsupported'})
builders.append(winxp32py25gtk2)


win32py24iocp = winxp3.copy()
win32py24iocp.update({
          'name': "win32-py2.4-iocp",
          'builddir': "W32-full2.4-iocp",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="python",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["iocp"],
                                                 uncleanWarnings=False),
          'category': 'unsupported'})
builders.append(win32py24iocp)

winxp32py25iocp = winxp2.copy()
winxp32py25iocp.update({
          'name': "winxp32-py2.5-iocp",
          'builddir': "WXP32-full2.5-iocp",
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 RemovePYCs=Win32RemovePYCs,
                                                 python="c:\\python25\\python.exe",
                                                 compileOpts2=["-c","mingw32"],
                                                 reactors=["iocp"],
                                                 uncleanWarnings=True),
          'category': 'unsupported'})
builders.append(winxp32py25iocp)

winxp32py25msi = winxp2.copy()
winxp32py25msi.update({
          'name': "winxp32-py2.5-msi",
          'builddir': "winxp32-py2.5-msi",
          'factory': TwistedBdistMsiFactory(source_copy,
                                            uncleanWarnings=True,
                                            platform="winxp32",
                                            pyVersion="2.5"),
          'category': 'unsupported'})
builders.append(winxp32py25msi)

winxp32py26msi = winxp4.copy()
winxp32py26msi.update({
          'name': "winxp32-py2.6-msi",
          'builddir': "winxp32-py2.6-msi",
          'factory': TwistedBdistMsiFactory(source_copy,
                                            uncleanWarnings=True,
                                            platform="winxp32",
                                            pyVersion="2.6"),
          'category': 'unsupported'})
builders.append(winxp32py26msi)


builders.append({
    'name': 'fedora64-py2.4-reactors',
    'slavenames': ['bot-clocktime'],
    'builddir': 'fedora64-py2.4-reactors',
    'factory': TwistedReactorsBuildFactory(source_copy,
                                           python="python",
                                           reactors=["poll", "epoll", "glib2"],
                                           uncleanWarnings=True),
    'category': 'supported'})


builders.append({
    'name': 'fedora32-py2.5-reactors',
    'slavenames': ['bot-thread'],
    'builddir': 'fedora32-py2.5-reactors',
    'factory': TwistedReactorsBuildFactory(source_copy,
                                           python="python",
                                           reactors=["poll", "epoll", "glib2"],
                                           uncleanWarnings=True),
    'category': 'supported'})


for py in ["2.4", "2.5"]:
    for reactor in ["select", "poll"]:
        builders.append({
                'name': "".join(["freebsd-py", py, "-", reactor]),
                'slavenames': ["bot-codelounge"],
                'builddir': "".join(["freebsd-py", py, "-", reactor]),
                'factory': TwistedReactorsBuildFactory(
                    source_copy, python="python" + py,
                    reactors=[reactor], uncleanWarnings=False),
                'category': 'unsupported',
                'locks': [twoCPULock]})

for (slave, bits) in [("3", "32"), ("2", "64")]:
    for py in ["2.6"]:
        for reactor in ["select", "poll"]:
            name = "".join(["freebsd8-", bits, "bit-py", py, "-", reactor])
            builders.append({
                    'name': name,
                    'slavenames': ["bot-arita-" + slave],
                    'builddir': name,
                    'factory': TwistedReactorsBuildFactory(
                        source_copy, python="python" + py,
                        reactors=[reactor], uncleanWarnings=False),
                    'category': 'unsupported'})


# builders.append({
#         'name': 'openbsd-py2.5-select',
#         'slavenames': ['bot-werner'],
#         'builddir': 'openbsd-py2.5-select',
#         'factory': TwistedReactorsBuildFactory(source_copy,
#                                                python="python2.5",
#                                                reactors=["select"],
#                                                uncleanWarnings=False),
#         'category': 'unsupported',
#         'unschedule': None,
#         'locks': [oneCPULock]})

# builders.append({
#         'name': 'netbsd-py2.5-select',
#         'slavenames': ['bot-reed'],
#         'builddir': 'netbsd-py2.5-select',
#         'factory': TwistedReactorsBuildFactory(source_copy,
#                                                python="python2.5",
#                                                reactors=["select"],
#                                                uncleanWarnings=False),
#         'unschedule': None,
#         'category': 'unsupported',
#         'locks': [oneCPULock]})


builders.append({
          'name': 'ubuntu64-py2.5-wx',
          'slavenames': ['bot-bigdog2'],
          'builddir': 'ubuntu-py2.5-wx',
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 python="python",
                                                 reactors=["wx"],
                                                 uncleanWarnings=True),
          'category': 'unsupported'})

builders.append({
          'name': 'ubuntu64-py2.5-select',
          'slavenames': ['bot-bigdog24'],
          'builddir': 'ubuntu64-py2.5-select',
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 python="python2.5",
                                                 reactors=["select"],
                                                 uncleanWarnings=False),
          'category': 'supported'})

builders.append({
          'name': 'ubuntu64-py2.5-poll',
          'slavenames': ['bot-bigdog24'],
          'builddir': 'ubuntu64-py2.5-poll',
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 python="python2.5",
                                                 reactors=["poll"],
                                                 uncleanWarnings=False),
          'category': 'supported'})

builders.append({
          'name': 'ubuntu64-py2.5-epoll',
          'slavenames': ['bot-bigdog24'],
          'builddir': 'ubuntu64-py2.5-epoll',
          'factory': TwistedReactorsBuildFactory(source_copy,
                                                 python="python2.5",
                                                 reactors=["epoll"],
                                                 uncleanWarnings=False),
          'category': 'supported'})

builders.append({
        'name': 'osx10.6-py2.6-select',
        'slavenames': ['bot-exarkun-1'],
        'builddir': 'osx10.6-py2.6-select',
        'factory': TwistedReactorsBuildFactory(source_copy,
                                               python="python2.6",
                                               reactors=["select"],
                                               uncleanWarnings=False),
        'category': 'supported'})

# The next two builders work together.  The first translates PyPy and
# isn't scheduled - it has to be forced manually.  The second uses the
# result of the first to test Twisted against pypy, and is scheduled
# in the usual way.  As such, they must be on the same slave and share
# a builddir.  Since buildbot doesn't let two builders have the same
# builddir in the master configuration, the slaves have to be
# configured to cause this to happen, probably by with
# symlinks. -exarkun
builders.append({
    'name': 'ubuntu64-pypy',
    'slavenames': ['bot-bigdog2'],
    'builddir': 'ubuntu64-pypy',
    'factory': TwistedPyPyBuildFactory(),
    'category': 'unsupported'})
builders.append({
    'name': 'ubuntu64-pypy-translator',
    'slavenames': ['bot-bigdog2'],
    'builddir': 'ubuntu64-pypy-translator',
    'factory': PyPyTranslationFactory(
        ["--gc=hybrid", "--thread", "-O3"],
        ["--allworkingmodules"]),
    'unschedule': None,
    'category': 'unsupported'})

# And again, another matched pair.
builders.append({
    'name': 'ubuntu32-pypy',
    'slavenames': ['bot-bigdogvm1'],
    'builddir': 'ubuntu32-pypy',
    'factory': TwistedPyPyBuildFactory(),
    'category': 'unsupported'})
builders.append({
    'name': 'ubuntu32-pypy-translator',
    'slavenames': ['bot-bigdogvm1'],
    'builddir': 'ubuntu32-pypy-translator',
    'factory': PyPyTranslationFactory(
        ["--gc=hybrid", "--thread", "-O3"],
        ["--allworkingmodules"]),
    'unschedule': None,
    'category': 'unsupported'})


# PyOpenSSL builders.  These are merged into builders later on so that
# they are excluded from certain parts of the configuration (because
# they're not really part of Twisted). -exarkun
pyOpenSSLBuilders = []
pyOpenSSL = botCube.copy()
pyOpenSSL.update({
    'name': 'ubuntu32-pyopenssl',
    'builddir': 'ubuntu32-pyopenssl',
    'factory': DebianPyOpenSSLBuildFactory(
        versions=["2.3", "2.4", "2.5", "2.6"],
        source=True,
        platform="linux-i686",
        distro="dapper",
        packageFiles=[
            "python-pyopenssl_0.6-2ubuntu3_all.deb",
            "pyopenssl-doc_0.6-2ubuntu3_all.deb",
            "python2.4-pyopenssl_0.6-2ubuntu3_i386.deb"]),
    'category': 'pyopenssl'})
pyOpenSSLBuilders.append(pyOpenSSL)
del pyOpenSSL

pyOpenSSLBuilders.append({
    'name': 'debian64-pyopenssl',
    'slavenames': ['bot-idnar-debian64'],
    'builddir': 'debian64-pyopenssl',
    'factory': DebianPyOpenSSLBuildFactory(
        versions=["2.4"],
        source=False,
        platform="linux-x86_64",
        distro="etch",
        packageFiles=[
            "pyopenssl-doc_0.6-2.3_all.deb",
            "python-pyopenssl_0.6-2.3_amd64.deb"]),
    'category': 'pyopenssl'})

pyOpenSSLBuilders.append({
    'name': 'osx10.4-pyopenssl',
    'slavenames': ['bot-osx-10.4'],
    'builddir': 'osx10.4-pyopenssl',
    'factory': OSXPyOpenSSLBuildFactory(
        versions=["2.5"],
        osxVersion="10.4",
        bdistEnv={
            'CFLAGS': '-I/Developer/SDKs/MacOSX10.4u.sdk/usr/include/'},
        source=False),
    'category': 'pyopenssl'})

pyOpenSSLBuilders.append({
        'name': 'osx10.6-py2.6-pyopenssl',
        'slavenames': ['bot-exarkun-1'],
        'builddir': 'osx10.6-py2.6-pyopenssl',
        'factory': OSXPyOpenSSLBuildFactory(
            versions=["2.6"],
            osxVersion="10.6",
            source=False),
        'category': 'pyopenssl'})

pyOpenSSL = winxp4.copy()
pyOpenSSL.update({
    'name': "winxp32-py2.4-pyopenssl",
    'builddir': "WXP32-py2.4-pyopenssl",
    'factory': Win32PyOpenSSLBuildFactory("winxp32", "msvc", "2.4", r"C:\OpenSSL-VS.NET2003"),
    'category': 'pyopenssl'})
pyOpenSSLBuilders.append(pyOpenSSL)
del pyOpenSSL

pyOpenSSL = winxp4.copy()
pyOpenSSL.update({
    'name': "winxp32-py2.5-pyopenssl",
    'builddir': "WXP32-py2.5-pyopenssl",
    'factory': Win32PyOpenSSLBuildFactory("winxp32", "msvc", "2.5", r"C:\OpenSSL-VS.NET2003"),
    'category': 'pyopenssl'})
pyOpenSSLBuilders.append(pyOpenSSL)
del pyOpenSSL

pyOpenSSL = winxp4.copy()
pyOpenSSL.update({
    'name': "winxp32-py2.6-pyopenssl",
    'builddir': "winxp32-py2.6-pyopenssl",
    'factory': Win32PyOpenSSLBuildFactory("winxp32", "msvc", "2.6", r"C:\OpenSSL-VS2008"),
    'category': 'pyopenssl'})
pyOpenSSLBuilders.append(pyOpenSSL)

pyOpenSSLBuilders.append({
        'name': 'pyopenssl-gcoverage',
        'slavenames': ['bot-cube'],
        'builddir': 'pyopenssl-gcoverage',
        'factory': PyOpenSSLGCoverageFactory(["python2.5"]),
        'category': 'pyopenssl'})

c['builders'] = builders


# Now set up the schedulers. We do this after setting up c['builders']
# so we can auto-generate the correct configuration from the builder
# definitions.
c['schedulers'] = [
    TwistedScheduler(
        name="all", branch=None,
        builderNames=[b['name'] for b in builders if 'unschedule' not in b],
        treeStableTimer=0)]

# Now merge PyOpenSSL builders
builders.extend(pyOpenSSLBuilders)
del pyOpenSSLBuilders

# configure other status things

c['slavePortnum'] = 9987
c['status'] = []
if really:
    p = os.path.expanduser("~/.twistd-web-pb")
    c['status'].append(html.Waterfall(distrib_port=p, categories=['supported', 'unsupported']))
    c['status'].append(html.Waterfall(distrib_port=p + '-supported', categories=['supported']))
    c['status'].append(words.IRC(host="irc.freenode.net",
                                 nick='buildbot',
                                 password=private.irc_password,
                                 channels=["twisted"]))
else:
    c['status'].append(html.Waterfall(http_port=9988))

status = html.WebStatus(
    distrib_port=os.path.expanduser('~/webstatus.twistd-web-pb'),
    allowForce=True)
status.putChild("boxes-supported", TenBoxesPerBuilder(categories=['supported']))
status.putChild("boxes-all", TenBoxesPerBuilder(categories=['supported', 'unsupported']))
status.putChild("boxes-pyopenssl", TenBoxesPerBuilder(categories=['pyopenssl']))
status.putChild("supported", WaterfallStatusResource(categories=['supported']))
status.putChild("waterfall", WaterfallStatusResource(categories=['supported', 'unsupported']))
status.putChild("waterfall-pyopenssl", WaterfallStatusResource(categories=['pyopenssl']))
c['status'].append(status)
del status

c['debugPassword'] = private.debugPassword
#c['interlocks'] = [("do-deb", ["full-2.2"], ["debuild"])]
if hasattr(private, "manhole"):
    from buildbot import manhole
    c['manhole'] = manhole.PasswordManhole(*private.manhole)
c['status'].append(client.PBListener(9936))
m = mail.MailNotifier(fromaddr="buildbot@twistedmatrix.com",
                      builders=["quick", "debian-py2.3-select"],
                      sendToInterestedUsers=True,
                      extraRecipients=["warner@lothar.com"],
                      mode="problem",
                     )
c['status'].append(m)
c['projectName'] = "Twisted"
c['projectURL'] = "http://twistedmatrix.com/"
c['buildbotURL'] = "http://buildbot.twistedmatrix.com/"
